return {
}

-- return {
-- 	{
-- 		"neovim/nvim-lspconfig",
-- 		dependencies = {
-- 			"hrsh7th/cmp-nvim-lsp",
-- 			"hrsh7th/cmp-path",
-- 			"hrsh7th/cmp-buffer",
-- 			"hrsh7th/cmp-nvim-lsp-signature-help",
-- 			{
-- 				"L3MON4D3/LuaSnip",
-- 				dependencies = {
-- 					"saadparwaiz1/cmp_luasnip",
-- 					"rafamadriz/friendly-snippets",
-- 				},
-- 				config = function()
-- 					require("luasnip.loaders.from_vscode").lazy_load()
-- 				end,
-- 			},
-- 			{
-- 				"williamboman/mason-lspconfig.nvim",
-- 				dependencies = { "williamboman/mason.nvim" },
-- 				config = function()
-- 					require("mason-lspconfig").setup({
-- 						ensure_installed = {
-- 							"lua_ls",
-- 							"ts_ls",
-- 						},
-- 					})
-- 				end,
-- 			},
-- 			{
-- 				"WhoIsSethDaniel/mason-tool-installer.nvim",
-- 				dependencies = { "williamboman/mason.nvim" },
-- 				config = function()
-- 					require("mason-tool-installer").setup({
-- 						ensure_installed = {
-- 							"stylua",
-- 							"prettier",
-- 						},
-- 					})
-- 				end,
-- 			},
-- 			{
-- 				"williamboman/mason.nvim",
-- 				config = function()
-- 					require("mason").setup()
-- 				end,
-- 			},
-- 			{
-- 				"nvimtools/none-ls.nvim",
-- 				dependencies = { "williamboman/mason-lspconfig.nvim" },
-- 				config = function()
-- 					local null_ls = require("null-ls")
-- 					null_ls.setup({
-- 						sources = {
-- 							null_ls.builtins.formatting.stylua,
-- 							null_ls.builtins.formatting.prettier,
-- 						},
-- 					})
-- 				end,
-- 			},
-- 		},
-- 		config = function()
-- 			-- Languages
-- 			local lspconfig = require("lspconfig")
-- 			local capabilities = require("cmp_nvim_lsp").default_capabilities()
-- 			lspconfig.lua_ls.setup({ capabilities = capabilities })
-- 			lspconfig.gdscript.setup({ capabilities = capabilities })
-- 			lspconfig.ts_ls.setup({ capabilities = capabilities })
-- 		end,
-- 	},
-- 	{
-- 		"hrsh7th/nvim-cmp",
-- 		dependencies = {
-- 			"L3MON4D3/LuaSnip",
-- 			"hrsh7th/cmp-cmdline",
-- 			"hrsh7th/cmp-path",
-- 			"hrsh7th/cmp-buffer",
-- 			"hrsh7th/cmp-nvim-lsp-signature-help",
-- 		},
-- 		config = function()
-- 			local cmp = require("cmp")
-- 			local luasnip = require("luasnip")
-- 			cmp.setup({
-- 				snippet = {
-- 					expand = function(args)
-- 						luasnip.lsp_expand(args.body)
-- 					end,
-- 				},
-- 				window = {
-- 					completion = cmp.config.window.bordered(),
-- 					documentation = cmp.config.window.bordered(),
-- 				},
-- 				mapping = cmp.mapping.preset.insert({
-- 					-- Expand or Select
-- 					["<CR>"] = cmp.mapping(function(fallback)
-- 						if cmp.visible() then
-- 							if luasnip.expandable() then
-- 								luasnip.expand()
-- 							else
-- 								cmp.confirm({ select = true })
-- 							end
-- 						else
-- 							fallback()
-- 						end
-- 					end),
--
-- 					-- Select Next
-- 					["<Tab>"] = cmp.mapping(function(fallback)
-- 						if cmp.visible() then
-- 							cmp.select_next_item()
-- 						elseif luasnip.locally_jumpable(1) then
-- 							luasnip.jump(1)
-- 						else
-- 							fallback()
-- 						end
-- 					end, { "i", "s" }),
--
-- 					-- Select Previous
-- 					["<S-Tab>"] = cmp.mapping(function(fallback)
-- 						if cmp.visible() then
-- 							cmp.select_prev_item()
-- 						elseif luasnip.locally_jumpable(-1) then
-- 							luasnip.jump(-1)
-- 						else
-- 							fallback()
-- 						end
-- 					end, { "i", "s" }),
-- 				}),
-- 				sources = cmp.config.sources({
-- 					{ name = "nvim_lsp" },
-- 					{ name = "luasnip" },
-- 				}, {
-- 					{ name = "buffer" },
-- 					{ name = "path" },
-- 					{ name = "nvim_lsp_signature_help" },
-- 				}),
-- 			})
--
-- 			-- `/` cmdline setup.
-- 			cmp.setup.cmdline("/", {
-- 				mapping = cmp.mapping.preset.cmdline(),
-- 				sources = {
-- 					{ name = "buffer" },
-- 				},
-- 			})
--
-- 			-- `:` cmdline setup.
-- 			cmp.setup.cmdline(":", {
-- 				mapping = cmp.mapping.preset.cmdline(),
-- 				sources = cmp.config.sources({
-- 					{ name = "path" },
-- 				}, {
-- 					{
-- 						name = "cmdline",
-- 						option = {
-- 							ignore_cmds = { "Man", "!" },
-- 						},
-- 					},
-- 				}),
-- 			})
-- 		end,
-- 	},
-- }
